akka {
  loglevel = "DEBUG"

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"

    # //#adaptive-router
    deployment {
      /nodeSupervisorRouter = {
        router = adaptive-group
        # metrics-selector = heap
        # metrics-selector = load
        # metrics-selector = cpu
        metrics-selector = mix
        nr-of-instances = 100
        routees.paths = ["/user/nodeSupervisor"]
        cluster {
          enabled = on
          use-role = nodeSupervisor
          allow-local-routees = off
        }
      }
    }
  }

  remote {
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = "127.0.0.1"
      port = 5555
    }
  }

  cluster {
    roles = [clusterMaster]
    seed-nodes = ["akka.tcp://ClusterSystem@127.0.0.1:5555"]

    unreachable-nodes-reaper-interval = 30s

    failure-detector {
          implementation-class = "akka.remote.PhiAccrualFailureDetector"

          heartbeat-interval = 5 s

          threshold = 20.0

          acceptable-heartbeat-pause = 60 s
    }

    auto-down-unreachable-after = 60s

    jobsPollingInterval = 5000
    taskStartingInterval = 2000
    receiveTimeoutInterval = 600
  }
}

mongo {
    host = "localhost"
    port = 27017

    dbName = "europeana_harvester_t"
    maxJobsPerIteration = 10
}

default-limits {
    bandwidthLimitReadInBytesPerSec = 102400
    maxConcurrentConnectionsLimit = 3
    connectionTimeoutInMillis = 60000
    maxNrOfRedirects = 10
    responseTimeoutFromSlaveInMillis = 10000
}

ping {
    timePeriod = 86400000
    nrOfPings = 5
    timeoutInterval = 4000
}

eventbus {
    host = "127.0.0.1"
    username = "guest"
    password = "guest"
    incomingQueue = "harvesterIn"
    outgoingQueue = "harvesterOut"
}

thumbnail {
    width = 50
    height = 50
}