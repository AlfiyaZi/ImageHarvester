akka {
  loglevel = "INFO"
  loggers = ["akka.event.slf4j.Slf4jLogger"]

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"

    deployment {
      /masterSender = {
        router = broadcast-group
        routees.paths = ["/user/clusterMaster"]
        cluster {
          enabled = on
          use-role = clusterMaster
          allow-local-routees = off
        }
      }
    }
  }

  # Change hostname to your IP address
  remote {
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = "127.0.0.1"
      port = 2551
    }
  }

  cluster {
    roles = [nodeSupervisor]

    # Change 127.0.0.1:5555 to the masters IP address. And  change localhost:2551 with your IP address.
    seed-nodes = ["akka.tcp://ClusterSystem@localhost:2551",
      "akka.tcp://ClusterSystem@127.0.0.1:5555"]

    auto-down-unreachable-after = 10s
    unreachable-nodes-reaper-interval = 1s

    failure-detector {
      implementation-class = "akka.remote.PhiAccrualFailureDetector"

      heartbeat-interval = 5s

      threshold = 10.0

      acceptable-heartbeat-pause = 60s
    }
  }
}

my-dispatcher {
  type = Dispatcher
  executor = "fork-join-executor"
  fork-join-executor {
        # Min number of threads to cap factor-based parallelism number to
        parallelism-min = 1

        # The parallelism factor is used to determine thread pool size using the
        # following formula: ceil(available processors * factor). Resulting size
        # is then bounded by the parallelism-min and parallelism-max values.
        parallelism-factor = 8.0

        # Max number of threads to cap factor-based parallelism number to
        parallelism-max = 100
      }

  throughput = 100
}

processer-dispatcher {
  type = Dispatcher
  executor = "fork-join-executor"
  fork-join-executor {
    # Min number of threads to cap factor-based parallelism number to
    parallelism-min = 1

    # The parallelism factor is used to determine thread pool size using the
    # following formula: ceil(available processors * factor). Resulting size
    # is then bounded by the parallelism-min and parallelism-max values.
    parallelism-factor = 8.0

    # Max number of threads to cap factor-based parallelism number to
    parallelism-max = 100
  }

  throughput = 100
}

slave {
    nrOfDownloaderSlaves = 100

    nrOfExtractorSlaves = 100

    nrOfPingerSlaves = 50

    nrOfRetries = 5

    taskNrLimit = 10

    pathToSave = "/tmp/europeana"

    responseType = diskStorage

    colorMap = "./colormap.png"
}

media-storage {
  #host = "europeana.busymachines.com"
  host = "localhost"
  port = 27017
  #username = "harvester_europeana"
  #password = "Nhck0zCfcu0M6kK"
  username = ""
  password = ""

  dbName = "media-storage"
  nameSpace = "thumbnails"

  source = "CRF harvester"
}

metrics {
  graphiteServer = ""
  masterID = ""
  slaveID = ""
  graphitePort = 8080
}
